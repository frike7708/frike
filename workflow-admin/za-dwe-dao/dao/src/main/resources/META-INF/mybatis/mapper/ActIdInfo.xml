<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongan.dwe.dao.repository.actidinfo.ActIdInfoRepository">
<insert id="insert" parameterType="com.zhongan.dwe.dao.dataobject.ActIdInfo" useGeneratedKeys="true" keyProperty="id">
 insert into ACT_ID_INFO (ID_,REV_,USER_ID_,TYPE_,KEY_,VALUE_,PASSWORD_,PARENT_ID_) values
(#{id} ,#{rev} ,#{userId} ,#{type} ,#{key} ,#{value} ,#{password} ,#{parentId} )

</insert>

<insert id="batchInsert" parameterType="java.util.List">
 insert into ACT_ID_INFO (ID_,REV_,USER_ID_,TYPE_,KEY_,VALUE_,PASSWORD_,PARENT_ID_) values 
<foreach collection="list" item="item" index="index" separator=",">
(#{item.id} ,#{item.rev} ,#{item.userId} ,#{item.type} ,#{item.key} ,#{item.value} ,#{item.password} ,#{item.parentId} )
</foreach>
</insert>

<update id="update">
<include refid="updateColumn" />
where ID_ = #{o.id}
</update>

<update id="updateIncludeNull">
<include refid="updateColumnIncludeNull" />
where ID_ = #{o.id}
</update>

<sql id="updateColumn">
 update ACT_ID_INFO 
<set> 
<if test= "o.rev!=null">
 REV_ = #{o.rev},
</if>
<if test= "o.userId!=null">
 USER_ID_ = #{o.userId},
</if>
<if test= "o.type!=null">
 TYPE_ = #{o.type},
</if>
<if test= "o.key!=null">
 KEY_ = #{o.key},
</if>
<if test= "o.value!=null">
 VALUE_ = #{o.value},
</if>
<if test= "o.password!=null">
 PASSWORD_ = #{o.password},
</if>
<if test= "o.parentId!=null">
 PARENT_ID_ = #{o.parentId},
</if>
</set>
</sql>

<sql id="updateColumnIncludeNull">
 update ACT_ID_INFO 
<set> 
 REV_ = #{o.rev},
 USER_ID_ = #{o.userId},
 TYPE_ = #{o.type},
 KEY_ = #{o.key},
 VALUE_ = #{o.value},
 PASSWORD_ = #{o.password},
 PARENT_ID_ = #{o.parentId},
</set>
</sql>

<update id="updateByCondition">
<include refid="updateColumn" />
<include refid="condition" />
</update>

<update id="updateIncludeNullByCondition">
<include refid="updateColumnIncludeNull" />
<include refid="condition" />
</update>

<update id="batchUpdate">
<foreach collection="list" item="item" index="index" open="" 
close="" separator=";"> 
 update ACT_ID_INFO 
<set> 
<if test="item.rev!=null"> 
 REV_ = #{item.rev},
</if> 
<if test="item.userId!=null"> 
 USER_ID_ = #{item.userId},
</if> 
<if test="item.type!=null"> 
 TYPE_ = #{item.type},
</if> 
<if test="item.key!=null"> 
 KEY_ = #{item.key},
</if> 
<if test="item.value!=null"> 
 VALUE_ = #{item.value},
</if> 
<if test="item.password!=null"> 
 PASSWORD_ = #{item.password},
</if> 
<if test="item.parentId!=null"> 
 PARENT_ID_ = #{item.parentId},
</if> 
</set> 
 where ID_ = #{item.id} 
</foreach> 
</update>

<update id="batchUpdateIncludeNull">
<foreach collection="list" item="item" index="index" open="" 
close="" separator=";"> 
 update ACT_ID_INFO 
<set> 
 REV_ = #{item.rev},
 USER_ID_ = #{item.userId},
 TYPE_ = #{item.type},
 KEY_ = #{item.key},
 VALUE_ = #{item.value},
 PASSWORD_ = #{item.password},
 PARENT_ID_ = #{item.parentId},
</set> 
 where ID_ = #{item.id} 
</foreach> 
</update>

<delete id="deleteByOid" parameterType="String">
 delete from ACT_ID_INFO where
 ID_ = #{id}
</delete>

<delete id="batchRemove">
delete from ACT_ID_INFO where ID_ in
<foreach item="item" index="index" collection="list" open="("
separator="," close=")">
 #{item}
</foreach>
</delete>

<delete id="deleteByCondition">
 delete from ACT_ID_INFO
<include refid="condition" />
</delete>

<select id="get" resultType="com.zhongan.dwe.dao.dataobject.ActIdInfo" 
parameterType="String"> 
 select <include refid="allColumns" /> 
 from ACT_ID_INFO where ID_ = #{id} 
</select>

<select id="findAll" resultType="com.zhongan.dwe.dao.dataobject.ActIdInfo"> 
 select <include refid="allColumns"/> from ACT_ID_INFO 
</select>

<select id="findByCondition" resultType="com.zhongan.dwe.dao.dataobject.ActIdInfo" 
parameterType="com.zhongan.dwe.dao.repository.actidinfo.condition.ActIdInfoCondition"> 
 select <include refid="selectColumns" /> 
 from ACT_ID_INFO 
<include refid="condition" /> 
<include refid="orderBy" /> 
<if test="page != null and page.start != null and page.limit != null"> 
 limit ${page.start},${page.limit}  
</if> 
</select>

<select id="countAll" resultType="int"> 
 select count(*) from ACT_ID_INFO 
</select>

<select id="countByCondition" resultType="int"> 
 select count(*) from ACT_ID_INFO  
<include refid="condition" /> 
</select>

<sql id="selectColumns"> 
<choose>
<when test="select != null and select.columns != null">
<foreach collection="select.columns" item="item" index="index" separator=",">
 ${item} 
</foreach>
</when> 
<otherwise><include refid="allColumns"/></otherwise>
</choose>
</sql>

<sql id="allColumns">
 ID_ as id, REV_ as rev, USER_ID_ as userId, TYPE_ as type, KEY_ as key, VALUE_ as value, PASSWORD_ as password, PARENT_ID_ as parentId</sql>	
	
<sql id="orderBy">
<if test="orderBy != null and orderBy.orderBy != null"> 
 order by 
<foreach item="item" index="index" collection="orderBy.orderBy" separator=","> 
 ${index} ${item} 
</foreach>
</if>
</sql>	

<sql id="condition">
<where>
<if test= "where != null and where.inId != null">
and ID_ in 
<foreach collection="where.inId" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inRev != null">
and REV_ in 
<foreach collection="where.inRev" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inUserId != null">
and USER_ID_ in 
<foreach collection="where.inUserId" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inType != null">
and TYPE_ in 
<foreach collection="where.inType" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inKey != null">
and KEY_ in 
<foreach collection="where.inKey" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inValue != null">
and VALUE_ in 
<foreach collection="where.inValue" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inPassword != null">
and PASSWORD_ in 
<foreach collection="where.inPassword" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.inParentId != null">
and PARENT_ID_ in 
<foreach collection="where.inParentId" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInId != null">
and ID_ not in 
<foreach collection="where.notInId" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInRev != null">
and REV_ not in 
<foreach collection="where.notInRev" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInUserId != null">
and USER_ID_ not in 
<foreach collection="where.notInUserId" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInType != null">
and TYPE_ not in 
<foreach collection="where.notInType" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInKey != null">
and KEY_ not in 
<foreach collection="where.notInKey" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInValue != null">
and VALUE_ not in 
<foreach collection="where.notInValue" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInPassword != null">
and PASSWORD_ not in 
<foreach collection="where.notInPassword" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.notInParentId != null">
and PARENT_ID_ not in 
<foreach collection="where.notInParentId" index="index" item="item" open="(" separator="," close=")">
 #{item} 
</foreach>
</if> 
<if test= "where != null and where.idIsNull == true">
and ID_ is null
</if>
<if test= "where != null and where.idIsNull == false">
and ID_ is not null
</if>
<if test= "where != null and where.revIsNull == true">
and REV_ is null
</if>
<if test= "where != null and where.revIsNull == false">
and REV_ is not null
</if>
<if test= "where != null and where.userIdIsNull == true">
and USER_ID_ is null
</if>
<if test= "where != null and where.userIdIsNull == false">
and USER_ID_ is not null
</if>
<if test= "where != null and where.typeIsNull == true">
and TYPE_ is null
</if>
<if test= "where != null and where.typeIsNull == false">
and TYPE_ is not null
</if>
<if test= "where != null and where.keyIsNull == true">
and KEY_ is null
</if>
<if test= "where != null and where.keyIsNull == false">
and KEY_ is not null
</if>
<if test= "where != null and where.valueIsNull == true">
and VALUE_ is null
</if>
<if test= "where != null and where.valueIsNull == false">
and VALUE_ is not null
</if>
<if test= "where != null and where.passwordIsNull == true">
and PASSWORD_ is null
</if>
<if test= "where != null and where.passwordIsNull == false">
and PASSWORD_ is not null
</if>
<if test= "where != null and where.parentIdIsNull == true">
and PARENT_ID_ is null
</if>
<if test= "where != null and where.parentIdIsNull == false">
and PARENT_ID_ is not null
</if>
<if test= "where != null and where.idNotEqual != null">
and ID_ != #{where.idNotEqual}
</if>
<if test= "where != null and where.revNotEqual != null">
and REV_ != #{where.revNotEqual}
</if>
<if test= "where != null and where.userIdNotEqual != null">
and USER_ID_ != #{where.userIdNotEqual}
</if>
<if test= "where != null and where.typeNotEqual != null">
and TYPE_ != #{where.typeNotEqual}
</if>
<if test= "where != null and where.keyNotEqual != null">
and KEY_ != #{where.keyNotEqual}
</if>
<if test= "where != null and where.valueNotEqual != null">
and VALUE_ != #{where.valueNotEqual}
</if>
<if test= "where != null and where.passwordNotEqual != null">
and PASSWORD_ != #{where.passwordNotEqual}
</if>
<if test= "where != null and where.parentIdNotEqual != null">
and PARENT_ID_ != #{where.parentIdNotEqual}
</if>
<if test= "where != null and where.likeId != null">
and ID_ like CONCAT('%','${where.likeId}','%')
</if> 
<if test= "where != null and where.likeUserId != null">
and USER_ID_ like CONCAT('%','${where.likeUserId}','%')
</if> 
<if test= "where != null and where.likeType != null">
and TYPE_ like CONCAT('%','${where.likeType}','%')
</if> 
<if test= "where != null and where.likeKey != null">
and KEY_ like CONCAT('%','${where.likeKey}','%')
</if> 
<if test= "where != null and where.likeValue != null">
and VALUE_ like CONCAT('%','${where.likeValue}','%')
</if> 
<if test= "where != null and where.likeParentId != null">
and PARENT_ID_ like CONCAT('%','${where.likeParentId}','%')
</if> 
<if test= "where != null and where.leftLikeId != null">
and ID_ like CONCAT('%','${where.leftLikeId}')
</if> 
<if test= "where != null and where.leftLikeUserId != null">
and USER_ID_ like CONCAT('%','${where.leftLikeUserId}')
</if> 
<if test= "where != null and where.leftLikeType != null">
and TYPE_ like CONCAT('%','${where.leftLikeType}')
</if> 
<if test= "where != null and where.leftLikeKey != null">
and KEY_ like CONCAT('%','${where.leftLikeKey}')
</if> 
<if test= "where != null and where.leftLikeValue != null">
and VALUE_ like CONCAT('%','${where.leftLikeValue}')
</if> 
<if test= "where != null and where.leftLikeParentId != null">
and PARENT_ID_ like CONCAT('%','${where.leftLikeParentId}')
</if> 
<if test= "where != null and where.rightLikeId != null">
and ID_ like CONCAT('${where.rightLikeId}','%')
</if> 
<if test= "where != null and where.rightLikeUserId != null">
and USER_ID_ like CONCAT('${where.rightLikeUserId}','%')
</if> 
<if test= "where != null and where.rightLikeType != null">
and TYPE_ like CONCAT('${where.rightLikeType}','%')
</if> 
<if test= "where != null and where.rightLikeKey != null">
and KEY_ like CONCAT('${where.rightLikeKey}','%')
</if> 
<if test= "where != null and where.rightLikeValue != null">
and VALUE_ like CONCAT('${where.rightLikeValue}','%')
</if> 
<if test= "where != null and where.rightLikeParentId != null">
and PARENT_ID_ like CONCAT('${where.rightLikeParentId}','%')
</if> 
<if test= "where != null and where.notLikeId != null">
and ID_ not like CONCAT('%','${where.notLikeId}','%')
</if> 
<if test= "where != null and where.notLikeUserId != null">
and USER_ID_ not like CONCAT('%','${where.notLikeUserId}','%')
</if> 
<if test= "where != null and where.notLikeType != null">
and TYPE_ not like CONCAT('%','${where.notLikeType}','%')
</if> 
<if test= "where != null and where.notLikeKey != null">
and KEY_ not like CONCAT('%','${where.notLikeKey}','%')
</if> 
<if test= "where != null and where.notLikeValue != null">
and VALUE_ not like CONCAT('%','${where.notLikeValue}','%')
</if> 
<if test= "where != null and where.notLikeParentId != null">
and PARENT_ID_ not like CONCAT('%','${where.notLikeParentId}','%')
</if> 
<if test= "where != null and where.notLeftLikeId != null">
and ID_ not like CONCAT('%','${where.notLeftLikeId}')
</if> 
<if test= "where != null and where.notLeftLikeUserId != null">
and USER_ID_ not like CONCAT('%','${where.notLeftLikeUserId}')
</if> 
<if test= "where != null and where.notLeftLikeType != null">
and TYPE_ not like CONCAT('%','${where.notLeftLikeType}')
</if> 
<if test= "where != null and where.notLeftLikeKey != null">
and KEY_ not like CONCAT('%','${where.notLeftLikeKey}')
</if> 
<if test= "where != null and where.notLeftLikeValue != null">
and VALUE_ not like CONCAT('%','${where.notLeftLikeValue}')
</if> 
<if test= "where != null and where.notLeftLikeParentId != null">
and PARENT_ID_ not like CONCAT('%','${where.notLeftLikeParentId}')
</if> 
<if test= "where != null and where.notRightLikeId != null">
and ID_ not like CONCAT('%','${where.notRightLikeId}','%')
</if> 
<if test= "where != null and where.notRightLikeUserId != null">
and USER_ID_ not like CONCAT('%','${where.notRightLikeUserId}','%')
</if> 
<if test= "where != null and where.notRightLikeType != null">
and TYPE_ not like CONCAT('%','${where.notRightLikeType}','%')
</if> 
<if test= "where != null and where.notRightLikeKey != null">
and KEY_ not like CONCAT('%','${where.notRightLikeKey}','%')
</if> 
<if test= "where != null and where.notRightLikeValue != null">
and VALUE_ not like CONCAT('%','${where.notRightLikeValue}','%')
</if> 
<if test= "where != null and where.notRightLikeParentId != null">
and PARENT_ID_ not like CONCAT('%','${where.notRightLikeParentId}','%')
</if> 
<if test= "where != null and where.greaterThanId != null and where.lessThanId != null">
and ID_ &lt; #{where.lessThanId} and ID_ &gt; #{where.greaterThanId}
</if>
<if test= "where != null and where.equalAndGreaterThanId != null and where.equalAndLessThanId != null">
and ID_ &lt;= #{where.equalAndLessThanId} and ID_ &gt;= #{where.equalAndGreaterThanId}
</if>
<if test= "where != null and where.greaterThanRev != null and where.lessThanRev != null">
and REV_ &lt; #{where.lessThanRev} and REV_ &gt; #{where.greaterThanRev}
</if>
<if test= "where != null and where.equalAndGreaterThanRev != null and where.equalAndLessThanRev != null">
and REV_ &lt;= #{where.equalAndLessThanRev} and REV_ &gt;= #{where.equalAndGreaterThanRev}
</if>
<if test= "where != null and where.greaterThanUserId != null and where.lessThanUserId != null">
and USER_ID_ &lt; #{where.lessThanUserId} and USER_ID_ &gt; #{where.greaterThanUserId}
</if>
<if test= "where != null and where.equalAndGreaterThanUserId != null and where.equalAndLessThanUserId != null">
and USER_ID_ &lt;= #{where.equalAndLessThanUserId} and USER_ID_ &gt;= #{where.equalAndGreaterThanUserId}
</if>
<if test= "where != null and where.greaterThanType != null and where.lessThanType != null">
and TYPE_ &lt; #{where.lessThanType} and TYPE_ &gt; #{where.greaterThanType}
</if>
<if test= "where != null and where.equalAndGreaterThanType != null and where.equalAndLessThanType != null">
and TYPE_ &lt;= #{where.equalAndLessThanType} and TYPE_ &gt;= #{where.equalAndGreaterThanType}
</if>
<if test= "where != null and where.greaterThanKey != null and where.lessThanKey != null">
and KEY_ &lt; #{where.lessThanKey} and KEY_ &gt; #{where.greaterThanKey}
</if>
<if test= "where != null and where.equalAndGreaterThanKey != null and where.equalAndLessThanKey != null">
and KEY_ &lt;= #{where.equalAndLessThanKey} and KEY_ &gt;= #{where.equalAndGreaterThanKey}
</if>
<if test= "where != null and where.greaterThanValue != null and where.lessThanValue != null">
and VALUE_ &lt; #{where.lessThanValue} and VALUE_ &gt; #{where.greaterThanValue}
</if>
<if test= "where != null and where.equalAndGreaterThanValue != null and where.equalAndLessThanValue != null">
and VALUE_ &lt;= #{where.equalAndLessThanValue} and VALUE_ &gt;= #{where.equalAndGreaterThanValue}
</if>
<if test= "where != null and where.greaterThanPassword != null and where.lessThanPassword != null">
and PASSWORD_ &lt; #{where.lessThanPassword} and PASSWORD_ &gt; #{where.greaterThanPassword}
</if>
<if test= "where != null and where.equalAndGreaterThanPassword != null and where.equalAndLessThanPassword != null">
and PASSWORD_ &lt;= #{where.equalAndLessThanPassword} and PASSWORD_ &gt;= #{where.equalAndGreaterThanPassword}
</if>
<if test= "where != null and where.greaterThanParentId != null and where.lessThanParentId != null">
and PARENT_ID_ &lt; #{where.lessThanParentId} and PARENT_ID_ &gt; #{where.greaterThanParentId}
</if>
<if test= "where != null and where.equalAndGreaterThanParentId != null and where.equalAndLessThanParentId != null">
and PARENT_ID_ &lt;= #{where.equalAndLessThanParentId} and PARENT_ID_ &gt;= #{where.equalAndGreaterThanParentId}
</if>
<if test= "where != null and where.id != null">
and ID_ = #{where.id}
</if> 
<if test= "where != null and where.rev != null">
and REV_ = #{where.rev}
</if> 
<if test= "where != null and where.userId != null">
and USER_ID_ = #{where.userId}
</if> 
<if test= "where != null and where.type != null">
and TYPE_ = #{where.type}
</if> 
<if test= "where != null and where.key != null">
and KEY_ = #{where.key}
</if> 
<if test= "where != null and where.value != null">
and VALUE_ = #{where.value}
</if> 
<if test= "where != null and where.password != null">
and PASSWORD_ = #{where.password}
</if> 
<if test= "where != null and where.parentId != null">
and PARENT_ID_ = #{where.parentId}
</if> 
 </where>
 </sql>	
</mapper>